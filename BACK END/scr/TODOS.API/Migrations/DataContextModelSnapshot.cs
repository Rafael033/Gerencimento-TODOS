// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TODOS.API.Data;

namespace TODOS.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("TODOS.API.Models.HistoricoTarefas", b =>
                {
                    b.Property<int>("Historico_id")
                        .HasColumnType("int");

                    b.Property<int>("Tarefa_id")
                        .HasColumnType("int");

                    b.Property<int?>("tb_historicoId")
                        .HasColumnType("int");

                    b.Property<int?>("tb_tarefasId")
                        .HasColumnType("int");

                    b.HasKey("Historico_id", "Tarefa_id");

                    b.HasIndex("tb_historicoId");

                    b.HasIndex("tb_tarefasId");

                    b.ToTable("HistoricoTarefas");
                });

            modelBuilder.Entity("TODOS.API.Models.tb_historico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Data_fim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Data_ini")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tb_historico");
                });

            modelBuilder.Entity("TODOS.API.Models.tb_tarefas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("Data_Fim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Data_ini")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prioridade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsavel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Situacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Solicitante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tb_tarefas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Data_ini = new DateTime(2022, 6, 20, 1, 29, 34, 200, DateTimeKind.Local).AddTicks(992),
                            Descricao = "Function para calcular frete",
                            Prioridade = "Baixa",
                            Responsavel = "rafael.nogueira",
                            Situacao = "To do",
                            Solicitante = "claudia.silva",
                            Tipo = "Tarefa",
                            Titulo = "Desenvolver Function"
                        },
                        new
                        {
                            Id = 2,
                            Data_ini = new DateTime(2022, 6, 20, 1, 29, 34, 200, DateTimeKind.Local).AddTicks(5885),
                            Prioridade = "Alta",
                            Responsavel = "rafael.nogueira",
                            Situacao = "Done",
                            Solicitante = "raquel.souza",
                            Tipo = "Projeto",
                            Titulo = "Desenvolver Sistema"
                        });
                });

            modelBuilder.Entity("TODOS.API.Models.HistoricoTarefas", b =>
                {
                    b.HasOne("TODOS.API.Models.tb_historico", "tb_historico")
                        .WithMany()
                        .HasForeignKey("tb_historicoId");

                    b.HasOne("TODOS.API.Models.tb_tarefas", "tb_tarefas")
                        .WithMany()
                        .HasForeignKey("tb_tarefasId");

                    b.Navigation("tb_historico");

                    b.Navigation("tb_tarefas");
                });
#pragma warning restore 612, 618
        }
    }
}
